@model RapidChef.Models.Recipe

@using (Html.BeginForm("Create", "Recipe", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Create Recipe</h4>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @if (ViewBag.Exception != null)
    {
        <asp:Label ID="ExLabel" runat="server" color="red">Exception Occurred: @ViewBag.Exception</asp:Label>
        <br />
    }

    <div class="form-group">
        @Html.LabelFor(model => model.recipeName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.recipeName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.recipeName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.directions, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.directions, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.directions, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tag1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tag1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tag1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tag2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tag2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tag2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.tag3, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tag3, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tag3, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ingrIDs, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ingrIDs[0], new { htmlAttributes = new { @class = "form-control" } })

            @for (var i = 1; i < 15; i++)
            {
                <br />
                @Html.EditorFor(model => model.ingrIDs[i], new { htmlAttributes = new { @class = "form-control" } })
            }
            @Html.ValidationMessageFor(model => model.ingrIDs, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    <a href='@Url.Action("Index", "Recipe")' class="btn btn-default">Back to List</a>
    @*@Html.ActionLink("Back to List", "Index")*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
